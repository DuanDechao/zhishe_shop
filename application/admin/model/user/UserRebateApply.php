<?php/** * * @author: xaboy<365615158@qq.com> * @day: 2017/11/11 */namespace app\admin\model\user;use app\admin\model\order\StoreOrder;use traits\ModelTrait;use app\admin\model\user\UserBill;use basic\ModelBasic;use app\admin\model\wechat\WechatUser;use app\admin\model\store\StoreCouponUser;use app\admin\model\user\UserExtract;use think\Db;use app\admin\model\user\User as UserModel;/** * 消费返利申请 model * Class RebateApply * @package app\admin\model\ump */class UserRebateApply extends ModelBasic{    use ModelTrait;    /**     * @param $where     * @return array     */    public static function systemPage($where){        $model = new self;        if($where['status'] != '')  $model = $model->where('status',$where['status']);        if($where['is_promoter'] != '')  $model = $model->where('is_promoter',$where['is_promoter']);        if(isset($where['user_type']) && $where['user_type'] != '')  $model = $model->where('user_type',$where['user_type']);        if($where['nickname'] != '') $model = $model->where('nickname|uid','like',"%$where[nickname]%");        $model = $model->order('uid desc');        return self::page($model,function ($item){            if($item['spread_uid']){                $item['spread_uid_nickname'] = self::where('uid',$item['spread_uid'])->value('nickname');            }else{                $item['spread_uid_nickname'] = '无';            }        },$where);    }    /*     * 设置搜索条件     *     */    public static function setWhere($where)    {        if($where['order']!=''){            $model=self::order(self::setOrder($where['order']));        }else{            $model=self::order('u.apply_time desc');        }        if($where['order_id'] != ''){            $model = $model->where('u.order_id','EQ',$where['order_id']);        }        if($where['platform'] != ''){            $model = $model->where('u.platform','EQ',$where['platform']);        }        if($where['state'] != ''){            $model = $model->where('u.state','EQ',$where['state']);        }        if($where['apply_time'] != ''){            list($startTime, $endTime) = explode(' - ', $where['apply_time']);            $model = $model->where('u.apply_time', '>', strtotime($startTime));            $model = $model->where('u.apply_time', '<', strtotime($endTime)+24*3600);        }        return $model;    }    /**     * 异步获取当前申请 信息     * @param $where     * @return array     */    public static function getApplyList($where){        $model = self::setWherePage(self::setWhere($where),$where,['w.sex','w.province','w.city','u.status','u.is_promoter'],['u.nickname','u.uid']);        $list = $model->alias('u')            ->join('User w','u.uid=w.uid')            ->field('u.*,w.nickname,w.avatar,w.rebate_money')            ->page((int)$where['page'],(int)$where['limit'])            ->select()            ->each(function ($item){                $item['apply_time']=date('Y-m-d H:i:s',$item['apply_time']);				if($item['state'] == 0) $item['state'] = '未审核';				else if($item['state'] == 1) $item['state'] = '通过';				else if($item['state'] == 2) $item['state'] = '未通过';            })->toArray();        $count=self::setWherePage(self::setWhere($where),$where,['w.sex','w.province','w.city','u.status','u.is_promoter'],['u.nickname','u.uid'])->alias('u')->join('WechatUser w','u.uid=w.uid')->count();        return ['count'=>$count,'data'=>$list];    }    /**     *  修改用户状态     * @param $uids 用户uid     * @param $status 修改状态     * @return array     */    public static function destrSyatus($uids,$status){        if(empty($uids) && !is_array($uids)) return false;        if($status=='') return false;        self::beginTrans();        try{            $res=self::where('uid','in',$uids)->update(['status'=>$status]);            self::checkTrans($res);            return true;        }catch (\Exception $e){            self::rollbackTrans();            return Json::fail($e->getMessage());        }    }	public static function giveUserRebateBounty($id, $uid, $rebate_bounty){		$userInfo = UserModel::getUserInfos($uid);		if(!$userInfo) return false;		ModelBasic::beginTrans();		$res1 = self::where(['id' => $id])->update(['state' => 1]);		$res2 = UserBill::income('返利金', $uid,'rebate_money','rebate', $rebate_bounty, 0, $userInfo['rebate_money'], '消费返利获得'.floatval($rebate_bounty).'奖励金', 1, $id);		$res3 = UserModel::bcInc($uid,'rebate_money', $rebate_bounty, 'uid');		$res = $res1 && $res2 && $res3;		ModelBasic::checkTrans($res);		return $res;	}}